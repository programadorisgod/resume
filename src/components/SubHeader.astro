---
import { Image } from 'astro:assets'
---

<div class="sub-header">
    <div class="sub-header-section-1">
        <div class="sub-header-section-1-image-text">
            <Image
                width={13}
                height={15}
                src="/assets/person.svg"
                alt={'person image'}
            />
            Our Workspace
        </div>
        <div class="sub-header-section-1-buttons">
            <button>New</button>
            <button>Import</button>
        </div>
    </div>
    <div class="sub-header-section-2">
        <div class="request visible">
            <span data-method="GET">GET</span>
            <span>Home</span>
            <Image
                width={7}
                height={8}
                src="/assets/point.svg"
                alt={'tab point'}
                class="point"
            />
        </div>
        <div class="request">
            <span data-method="GET">GET</span>
            <span>Projects</span>
            <Image
                width={7}
                height={8}
                src="/assets/point.svg"
                alt={'tab point'}
                class="point"
            />
            <Image
                width={15}
                height={15}
                alt={'close tab'}
                src="/assets/close.svg"
                class="close_tab"
            />
        </div>
        <div class="request">
            <span data-method="GET">GET</span>
            <span>Experience</span>
            <Image
                width={7}
                height={8}
                src="/assets/point.svg"
                alt={'tab point'}
                class="point"
            />
            <Image
                width={15}
                height={15}
                alt={'close tab'}
                src="/assets/close.svg"
                class="close_tab"
            />
        </div>
        <div class="request">
            <span data-method="GET">GET</span>
            <span>Contact me</span>
            <Image
                width={7}
                height={8}
                src="/assets/point.svg"
                alt={'tab point'}
                class="point"
            />
            <Image
                width={15}
                height={15}
                alt={'close tab'}
                src="/assets/close.svg"
                class="close_tab"
            />
        </div>
    </div>
</div>

<script>
    function focusTab(
        tabs: NodeListOf<Element>,
        sections: NodeListOf<Element>
    ) {
        tabs[0].classList.add('tab_focus')
        tabs[0].querySelector('.point')?.classList.add('visible')

        tabs.forEach((tab, index) => {
            tab.addEventListener('click', () => {
                const point = tab.querySelector('.point')

                tabs.forEach((t) => {
                    t.classList.remove('tab_focus')
                    const point = t.querySelector('.point')
                    point?.classList.remove('visible')
                })

                tab.classList.add('tab_focus')
                point?.classList.add('visible')

                if (sections.length) {
                    sections[index].scrollIntoView({
                        behavior: 'smooth',
                        block: 'start',
                        inline: 'start',
                    })
                }
            })
        })
    }

    function closeTabs(
        tabs: NodeListOf<Element>,
        closeTabsElements: NodeListOf<Element>,
        sections: NodeListOf<Element>
    ) {
        closeTabsElements.forEach((tab, index) => {
            tab.addEventListener('click', (event) => {
                event.stopPropagation()
                tabs[index + 1].classList.remove('visible', 'focus_tab')
                index++
                const newIndex = index - 1
                if (sections.length > 0) {
                    sections[newIndex].scrollIntoView({
                        behavior: 'smooth',
                        block: 'start',
                        inline: 'start',
                    })
                }
                tabs.forEach((tab, index) => {
                    const prevPoint = tabs[newIndex].querySelector('.point')
                    const point = tabs[index].querySelector('.point')

                    tabs[index].classList.remove('tab_focus')
                    point?.classList.remove('visible')

                    tabs[newIndex].classList.add('tab_focus')
                    prevPoint?.classList.add('visible')
                })
            })
        })
    }

    const tabs = document.querySelectorAll('.sub-header-section-2 div')
    const sections = document.querySelectorAll('.main-content section')

    const closeTabsElements = document.querySelectorAll(
        '.sub-header-section-2 .close_tab'
    )

    focusTab(tabs, sections)
    closeTabs(tabs, closeTabsElements, sections)
</script>

<style is:global>
    .sub-header {
        display: flex;
        grid-area: subhead;
        align-items: center;
        border-bottom: 1px solid var(--chalk-color);
        height: 35px;
        transition: border 0.4s background 0.5s ease-in-out;
    }
    .sub-header-section-1 {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1px 10px 1px 10px;
        border-right: 1px solid var(--chalk-color);
        gap: 2em;
        max-height: 35px;
        transition: border 0.4s;
        margin: 0;

        & button {
            border: none;
            border-radius: 5px;
            height: 2em;
            width: 5em;
        }

        & .sub-header-section-1-image-text {
            display: flex;
            gap: 10px;
            justify-content: center;
            align-items: center;
            border: none;
            font-weight: 500;
        }
    }

    .sub-header-section-2 {
        display: flex;
        align-items: center;
        justify-content: left;
        border-right: 1px solid var(--chalk-color);
        width: 70%;
        transition: border 0.4s;

        & .tab_focus {
            position: relative;

            & ::after {
                content: '';
                width: 100%;
                height: 1px;
                background: var(--reddish-orange);
                position: absolute;
                left: 0;
                bottom: 0;
            }
        }

        & .request.visible {
            visibility: visible;
        }

        & .request {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 35px;
            border-right: 1px solid var(--chalk-color);
            gap: 1em;
            transition: border 0.4s;
            width: 100%;
            padding-left: 1em;
            padding-right: 1em;
            cursor: pointer;
            text-wrap: nowrap;
            visibility: hidden;

            & .point {
                visibility: hidden;
            }

            & .point.visible {
                visibility: visible;
            }

            & .close_tab {
                visibility: hidden;
                transition: visibility 0.3s ease-in-out;
                background: rgba(232, 235, 243, 0.2);
                border-radius: 50%;
                width: 15px;
                height: 15px;
            }

            &:hover .close_tab {
                visibility: visible;
            }
        }
    }

    [data-method='GET'] {
        color: #027f31;
        font-weight: bold;
    }
    .sub-header-section-3 {
        padding: 0 10px 0 10px;
        display: flex;
        align-items: center;
        justify-content: left;
        width: 5%;
    }

    @media (width <= 1024px) {
        .sub-header-section-2 {
            width: 70%;
        }

        .sub-header-section-1 {
            & .sub-header-section-1-buttons {
                display: none;
            }
        }
    }

    @media (width <= 1184px) {
        .sub-header-section-1-image-text {
            gap: 0 !important;
            & img {
                display: none;
            }
        }
    }
</style>
